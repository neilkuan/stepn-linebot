// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Outputs": Object {
    "testbotsvcLoadBalancerDNSCA2C4549": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "testbotsvcLBC6A8FC31",
          "DNSName",
        ],
      },
    },
    "testbotsvcServiceURL8E2CD71F": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Fn::GetAtt": Array [
                "testbotsvcLBC6A8FC31",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "testbotsvcLBC6A8FC31": Object {
      "DependsOn": Array [
        "testcluster7D0F2F95",
        "testclusterDBD4D436",
        "testnewVpcLineBotPublicSubnetSubnet1DefaultRouteE0DBEB84",
        "testnewVpcLineBotPublicSubnetSubnet1RouteTableAssociation8AC6B923",
        "testnewVpcLineBotPublicSubnetSubnet2DefaultRouteA418DC1E",
        "testnewVpcLineBotPublicSubnetSubnet2RouteTableAssociation03726EEF",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "testbotsvcLBSecurityGroup88B79D38",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Ref": "testnewVpcLineBotPublicSubnetSubnet1Subnet2A0618AF",
          },
          Object {
            "Ref": "testnewVpcLineBotPublicSubnetSubnet2Subnet50C63EA6",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "testbotsvcLBPublicListener1C72B46B": Object {
      "DependsOn": Array [
        "testcluster7D0F2F95",
        "testclusterDBD4D436",
      ],
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": Object {
              "Ref": "teststepnlinecaEB61F142",
            },
          },
        ],
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "testbotsvcLBPublicListenerECSGroupBFF8A2B0",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "testbotsvcLBC6A8FC31",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "testbotsvcLBPublicListenerECSGroupBFF8A2B0": Object {
      "DependsOn": Array [
        "testcluster7D0F2F95",
        "testclusterDBD4D436",
      ],
      "Properties": Object {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "testnewVpc007A0578",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "testbotsvcLBPublicRedirectListener3BD403D9": Object {
      "DependsOn": Array [
        "testcluster7D0F2F95",
        "testclusterDBD4D436",
      ],
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "RedirectConfig": Object {
              "Port": "443",
              "Protocol": "HTTPS",
              "StatusCode": "HTTP_301",
            },
            "Type": "redirect",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "testbotsvcLBC6A8FC31",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "testbotsvcLBSecurityGroup88B79D38": Object {
      "DependsOn": Array [
        "testcluster7D0F2F95",
        "testclusterDBD4D436",
      ],
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB testbotsvcLBDAF8F6D6",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": Object {
          "Ref": "testnewVpc007A0578",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testbotsvcLBSecurityGrouptotestbotsvcServiceSecurityGroup8580FCCA50005C12DBFB": Object {
      "DependsOn": Array [
        "testcluster7D0F2F95",
        "testclusterDBD4D436",
      ],
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "testbotsvcServiceSecurityGroup076F5BF6",
            "GroupId",
          ],
        },
        "FromPort": 5000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "testbotsvcLBSecurityGroup88B79D38",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 5000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "testbotsvcServiceB37236BE": Object {
      "DependsOn": Array [
        "testbotsvcLBPublicListenerECSGroupBFF8A2B0",
        "testbotsvcLBPublicListener1C72B46B",
        "testcluster7D0F2F95",
        "testclusterDBD4D436",
      ],
      "Properties": Object {
        "CapacityProviderStrategy": Array [
          Object {
            "Base": 1,
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
        ],
        "Cluster": Object {
          "Ref": "testclusterDBD4D436",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": Array [
          Object {
            "ContainerName": "linebot",
            "ContainerPort": 5000,
            "TargetGroupArn": Object {
              "Ref": "testbotsvcLBPublicListenerECSGroupBFF8A2B0",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "testbotsvcServiceSecurityGroup076F5BF6",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "testnewVpcLineBotPublicSubnetSubnet1Subnet2A0618AF",
              },
              Object {
                "Ref": "testnewVpcLineBotPublicSubnetSubnet2Subnet50C63EA6",
              },
            ],
          },
        },
        "PlatformVersion": "LATEST",
        "ServiceName": "line-bot",
        "TaskDefinition": Object {
          "Ref": "testtasks6AE183F7",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "testbotsvcServiceSecurityGroup076F5BF6": Object {
      "DependsOn": Array [
        "testcluster7D0F2F95",
        "testclusterDBD4D436",
      ],
      "Properties": Object {
        "GroupDescription": "test/test/botsvc/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "testnewVpc007A0578",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "testbotsvcServiceSecurityGroupfromtestbotsvcLBSecurityGroup90403D7F500022CF42BE": Object {
      "DependsOn": Array [
        "testcluster7D0F2F95",
        "testclusterDBD4D436",
      ],
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 5000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "testbotsvcServiceSecurityGroup076F5BF6",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "testbotsvcLBSecurityGroup88B79D38",
            "GroupId",
          ],
        },
        "ToPort": 5000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "testcluster7D0F2F95": Object {
      "Properties": Object {
        "CapacityProviders": Array [
          "FARGATE",
          "FARGATE_SPOT",
        ],
        "Cluster": Object {
          "Ref": "testclusterDBD4D436",
        },
        "DefaultCapacityProviderStrategy": Array [],
      },
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
    },
    "testclusterDBD4D436": Object {
      "Properties": Object {
        "ClusterName": "LineBot",
      },
      "Type": "AWS::ECS::Cluster",
    },
    "testnewVpc007A0578": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/test/newVpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "testnewVpcIGW617ABD79": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/test/newVpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "testnewVpcLineBotPublicSubnetSubnet1DefaultRouteE0DBEB84": Object {
      "DependsOn": Array [
        "testnewVpcVPCGW2C4B2F70",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testnewVpcIGW617ABD79",
        },
        "RouteTableId": Object {
          "Ref": "testnewVpcLineBotPublicSubnetSubnet1RouteTable04D7C34D",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testnewVpcLineBotPublicSubnetSubnet1RouteTable04D7C34D": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/test/newVpc/LineBot-Public-SubnetSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testnewVpc007A0578",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testnewVpcLineBotPublicSubnetSubnet1RouteTableAssociation8AC6B923": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testnewVpcLineBotPublicSubnetSubnet1RouteTable04D7C34D",
        },
        "SubnetId": Object {
          "Ref": "testnewVpcLineBotPublicSubnetSubnet1Subnet2A0618AF",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testnewVpcLineBotPublicSubnetSubnet1Subnet2A0618AF": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/17",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "LineBot-Public-Subnet",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "test/test/newVpc/LineBot-Public-SubnetSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "testnewVpc007A0578",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testnewVpcLineBotPublicSubnetSubnet2DefaultRouteA418DC1E": Object {
      "DependsOn": Array [
        "testnewVpcVPCGW2C4B2F70",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "testnewVpcIGW617ABD79",
        },
        "RouteTableId": Object {
          "Ref": "testnewVpcLineBotPublicSubnetSubnet2RouteTableB911AB70",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "testnewVpcLineBotPublicSubnetSubnet2RouteTableAssociation03726EEF": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "testnewVpcLineBotPublicSubnetSubnet2RouteTableB911AB70",
        },
        "SubnetId": Object {
          "Ref": "testnewVpcLineBotPublicSubnetSubnet2Subnet50C63EA6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "testnewVpcLineBotPublicSubnetSubnet2RouteTableB911AB70": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/test/newVpc/LineBot-Public-SubnetSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testnewVpc007A0578",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "testnewVpcLineBotPublicSubnetSubnet2Subnet50C63EA6": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/17",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "LineBot-Public-Subnet",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "test/test/newVpc/LineBot-Public-SubnetSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "testnewVpc007A0578",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "testnewVpcVPCGW2C4B2F70": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "testnewVpcIGW617ABD79",
        },
        "VpcId": Object {
          "Ref": "testnewVpc007A0578",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "teststepnLinebotARecord99CCC7B3": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::Join": Array [
              "",
              Array [
                "dualstack.",
                Object {
                  "Fn::GetAtt": Array [
                    "testbotsvcLBC6A8FC31",
                    "DNSName",
                  ],
                },
              ],
            ],
          },
          "HostedZoneId": Object {
            "Fn::GetAtt": Array [
              "testbotsvcLBC6A8FC31",
              "CanonicalHostedZoneID",
            ],
          },
        },
        "HostedZoneId": "XXXXXXXXXXXXX",
        "Name": "stepnlinebot.example.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "teststepnlinecaEB61F142": Object {
      "Properties": Object {
        "DomainName": "stepn-linebot.example.com",
        "DomainValidationOptions": Array [
          Object {
            "DomainName": "stepn-linebot.example.com",
            "HostedZoneId": "XXXXXXXXXXXXX",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
    },
    "testtasks6AE183F7": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "CHANNEL_ACCESS_TOKEN",
                "Value": "mock",
              },
              Object {
                "Name": "CHANNEL_SECRET",
                "Value": "mock",
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Sub": "\${AWS::AccountId}.dkr.ecr.\${AWS::Region}.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}:b01653639cc1e62ed48c41bf88b7917d0653bb2dfd9dcce66e9e034c935d5fc0",
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "testtaskslinebotLogGroup5E78956A",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "linebot",
              },
            },
            "Name": "linebot",
            "PortMappings": Array [
              Object {
                "ContainerPort": 5000,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "testtasksExecutionRole2F24D26D",
            "Arn",
          ],
        },
        "Family": "testtasks01D96284",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "RuntimePlatform": Object {
          "CpuArchitecture": "X86_64",
          "OperatingSystemFamily": "LINUX",
        },
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "testtasksTaskRoleF44277A5",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "testtasksExecutionRole2F24D26D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testtasksExecutionRoleDefaultPolicyE03DD317": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/",
                    Object {
                      "Fn::Sub": "cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testtaskslinebotLogGroup5E78956A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testtasksExecutionRoleDefaultPolicyE03DD317",
        "Roles": Array [
          Object {
            "Ref": "testtasksExecutionRole2F24D26D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testtasksTaskRoleF44277A5": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testtaskslinebotLogGroup5E78956A": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
